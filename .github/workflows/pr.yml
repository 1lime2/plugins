name: OpenOSRS - CI (PR)

on:
  pull_request:
    types: ['opened', 'edited', 'reopened', 'synchronize']

jobs:
  pr-lint:
    name: PR title
    runs-on: ubuntu-latest

    steps:
      - name: PR title lint
        if: github.event_name == 'pull_request'
        uses: seferov/pr-lint-action@v1.0.3
        with:
          title-regex: '^([\w-/]+): \w+'

  build:
    runs-on: ubuntu-latest
    name: Build

    steps:
      - name: Download java
        run: wget -O jdk-8u221-linux-x64.tar.gz -c --content-disposition "https://javadl.oracle.com/webapps/download/AutoDL?BundleId=239835_230deb18db3e4014bb8e3e8324f81b43"

      - name: Set up JDK 8
        uses: actions/setup-java@master
        with:
          java-version: 1.8
          architecture: x64
          jdkFile: ./jdk-8u221-linux-x64.tar.gz

      - uses: actions/checkout@v1

      - uses: actions/checkout@v1
        with:
          repository: open-osrs/runelite
          ref: master

      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable (client)
        run: chmod +x ./gradlew
        working-directory: /home/runner/work/plugins/runelite

      - name: Assembling client
        run: ./gradlew assemble --console=plain
        working-directory: /home/runner/work/plugins/runelite

      - name: Building client
        run: ./gradlew build --stacktrace -x test -x checkstyleMain --console=plain
        working-directory: /home/runner/work/plugins/runelite

      - name: Upload client artifacts to local maven
        run: ./gradlew publishToMavenLocal --console=plain
        working-directory: /home/runner/work/plugins/runelite

      - name: Make gradlew executable (plugins)
        run: chmod +x ./gradlew

      - name: Assembling plugins
        run: ./gradlew assemble --console=plain

      - name: Checking plugins code conventions (Test)
        run: ./gradlew checkstyleTest --console=plain

      - name: Checking plugins code conventions (Main)
        run: ./gradlew checkstyleMain --console=plain

      - name: Building plugins
        run: ./gradlew build --stacktrace -x test -x checkstyleMain --console=plain

      - name: Testing plugins
        run: ./gradlew test --stacktrace --console=plain